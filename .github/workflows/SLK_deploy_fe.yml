name: SLK Deploy FE

on:
  workflow_call: # 允许被其他工作流调用
    inputs:
      environment:
        required: true
        type: string
      app_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      SERVER_HOST:
        required: false
        type: string
      SERVER_USER:
        required: false
        type: string
      SERVER_POST:
        required: false
        type: number
      HTTP_PORT:
        required: false
        type: string
      HTTPS_PORT:
        required: false
        type: string
      API_BASE_URL:
        required: false
        type: string

    secrets:
      DOCKERHUB_USR:
        required: true
      DOCKERHUB_PWD:
        required: true
      SSH_PRIVATE_KEY:
        required: true

jobs:
  prepare-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Echo parameters
        run: |
          echo "Deploying input 1: ${{ inputs.app_name }} to ${{ inputs.environment }}"
          echo "Deploying input 2: ${{ inputs.SERVER_HOST }} to ${{ inputs.SERVER_POST }}"
          echo "Using user: ${{ secrets.DOCKERHUB_USR }}"
          echo "Using pass: ${{ secrets.DOCKERHUB_PWD }}"
          echo "Using Key: ${{ secrets.SSH_PRIVATE_KEY }}"

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 22

      - name: Install Dependencies
        run: |
          ls -l
          cd FE
          npm install

      - name: Build App
        run: |
          ls -l
          cd FE     
          npm run build

      - name: Prepare Documents
        run: |
          cd FE
          mkdir -p artifacts
          ls -l
          cp Dockerfile ./artifacts/
          cp env.sh ./artifacts/
          cp -r conf.d ./artifacts/
          cp -r build ./artifacts/
          ls -l artifacts

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: |
            # -----------------------------take case here
            FE/artifacts

  build-image:
    runs-on: ubuntu-latest
    needs: prepare-deploy
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-artifacts
          path: artifacts

      - name: Build Docker image
        run: |
          cd artifacts
          ls -l          
          docker buildx build -t ${{inputs.app_name}} .

      - name: Push DockerImage to Docker Hub
        run: |
          docker login -u ${{secrets.DOCKERHUB_USR}} -p ${{secrets.DOCKERHUB_PWD}}
          docker tag ${{inputs.app_name}} ${{secrets.DOCKERHUB_USR}}/${{inputs.app_name}}:latest
          docker push ${{secrets.DOCKERHUB_USR}}/${{inputs.app_name}}:latest

  delete-artifacts:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: app-artifacts

  deploy-image:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Deploy Docker image to ${{inputs.SERVER_HOST}}
        uses: appleboy/ssh-action@master
        with:
          host: ${{inputs.SERVER_HOST}}
          port: ${{inputs.SERVER_POST}}
          username: ${{inputs.SERVER_USER}}
          key: ${{secrets.SSH_PRIVATE_KEY}}
          script: |
            echo "Executing command on remote server..."
            docker images
            docker rm -f ${{inputs.app_name}} || true
            docker rmi ${{secrets.DOCKERHUB_USR}}/${{inputs.app_name}}:latest || true
            docker pull ${{secrets.DOCKERHUB_USR}}/${{inputs.app_name}}:latest || true
            docker run -idt \
            --name ${{inputs.app_name}} \
            --restart always \
            -p ${{inputs.HTTP_PORT}} \
            -p ${{inputs.HTTPS_PORT}} \
            -e API_BASE_VER=${{inputs.environment}} \
            -e API_BASE_URL=${{inputs.API_BASE_URL}} \
            ${{secrets.DOCKERHUB_USR}}/${{inputs.app_name}}:latest
