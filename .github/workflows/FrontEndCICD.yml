name: 01 USA FrontEnd React18

on:
  #  push:
  #    branches:
  #      - main
  workflow_dispatch:

env:
  PROJECT_NAME: react18

jobs:
  build-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 22

      - name: React Install Dependencies
        run: |
          ls -l
          cd FE
          npm install

      - name: Build React App
        run: |
          ls -l
          cd FE     
          npm run build

      - name: Build Application
        run: |
          cd FE
          mkdir -p artifacts
          ls -l
          cp Dockerfile ./artifacts/
          cp env.sh ./artifacts/
          cp -r conf.d ./artifacts/
          cp -r build ./artifacts/
          ls -l artifacts

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: |
            # -----------------------------take case here
            FE/artifacts

  build-image:
    runs-on: ubuntu-latest
    needs: build-app
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-artifacts
          path: artifacts

      - name: Build Docker image
        run: |
          cd artifacts
          ls -l          
          docker buildx build -t $PROJECT_NAME .

      - name: Push DockerImage to Docker Hub
        run: |
          docker login -u ${{secrets.DOCKERHUB_USR}} -p ${{secrets.DOCKERHUB_PWD}}
          docker tag $PROJECT_NAME ${{secrets.DOCKERHUB_USR}}/$PROJECT_NAME:latest
          docker push ${{secrets.DOCKERHUB_USR}}/$PROJECT_NAME:latest

  delete-artifacts:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: app-artifacts

  deploy-image:
    runs-on: ubuntu-latest
    needs: build-image
    env:
      PROJECT_NAME: react18
      HTTP_PORT: "8080:8080"
      HTTPS_PORT: "443:443"
      SERVER_HOST: usa.dreams-studio.com
      SERVER_USER: root
      SERVER_POST: 22
    steps:
      - name: Deploy Docker image to ${{env.SERVER_HOST}}
        uses: appleboy/ssh-action@master
        with:
          host: ${{env.SERVER_HOST}}
          port: ${{env.SERVER_POST}}
          username: ${{env.SERVER_USER}}
          key: ${{ secrets.SSH_PRIVATE_KEY_TX }}
          script: |
            echo "Executing command on remote server..."
            docker images
            docker rm -f ${{env.PROJECT_NAME}} || true
            docker rmi ${{secrets.DOCKERHUB_USR}}/${{env.PROJECT_NAME}}:latest || true
            docker pull ${{secrets.DOCKERHUB_USR}}/${{env.PROJECT_NAME}}:latest || true
            docker run -idt \
            --name ${{env.PROJECT_NAME}} \
            --restart always \
            -p ${{env.HTTP_PORT}} \
            -p ${{env.HTTPS_PORT}} \
            -e API_BASE_VER='PROD' \
            -e API_BASE_URL='https://usa.dreams-studio.com:9801' \
            ${{secrets.DOCKERHUB_USR}}/${{env.PROJECT_NAME}}:latest
